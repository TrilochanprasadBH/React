/* Global reset-ish: keeps sizing predictable */
*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --board-size: 300px;
  --cell-size: 100px; /* board-size / 3 */
  --gap: 0; /* set to 4px if you want spacing between cells */
  --border: 2px;
  --cell-border: 1px;
  --font-size: 48px;
}

body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
  text-align: center;
}

h1,
h3 {
  margin: 12px 0;
}

/* Container around the board, optional */
.mainContainer {
  margin: 16px auto;
  width: var(--board-size);
  /* Let height grow naturally; the board defines its own height */
  padding: 0;
  border: var(--border) solid #000;
}

/* Turn the board into a strict 3x3 grid */
.mainContainer {
  display: grid;
  grid-template-columns: repeat(3, var(--cell-size));
  grid-auto-rows: var(--cell-size);
  gap: var(--gap);
}

/* If you keep boardRow wrappers in JSX, neutralize them so grid controls layout */
.boardRow {
  display: contents; /* lets children participate directly in the parent grid */
}

/* The square component: if it's a button, normalize styles */
.square {
  display: flex;
  align-items: center;
  justify-content: center;

  width: var(--cell-size);
  height: var(--cell-size);

  background: bisque;
  border: var(--cell-border) solid #000;
  padding: 0;
  margin: 0;

  font-weight: 700;
  font-size: var(--font-size);
  line-height: 1; /* prevents baseline jumps */
  cursor: pointer;

  /* Prevent the button from shifting size on focus/active */
  outline: none;
}

/* Keep focus visible without changing layout */
.square:focus-visible {
  outline: 2px solid dodgerblue;
  outline-offset: -2px; /* draw inside to keep size stable */
}

/* Hover/active feedback without changing dimensions */
.square:hover {
  filter: brightness(0.97);
}
.square:active {
  transform: translateY(
    0
  ); /* disable default button press shifts across browsers */
}

/* Optional: nicer border grid lines by hiding inner borders and drawing outer frame */
.mainContainer {
  border: none; /* remove if you prefer outer thick border */
}
.square {
  border: none;
  position: relative;
}
/* Draw grid lines using pseudo-borders so widths don't double */
.square::after,
.square::before {
  content: "";
  position: absolute;
  background: #000;
  opacity: 0.6;
}
/* vertical lines (right edge for col 0 and 1) */
.square:nth-child(3n + 1)::after,
.square:nth-child(3n + 2)::after {
  width: 2px;
  height: 100%;
  right: -1px;
  top: 0;
}
/* horizontal lines (bottom edge for rows 0 and 1) */
.square:nth-child(-n + 6)::before {
  height: 2px;
  width: 100%;
  left: 0;
  bottom: -1px;
}
